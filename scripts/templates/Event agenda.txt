# Event Agenda 

| TIME | REACT | NATIVE |
|---|---|---|
| **08:00** | ** Registation                        ** | ** ** |
| |  |   |
| **08:30** | **                          Welcome Breakfast                           by Kega                        ** | ** ** |
| |  |   |
| **09:30** | **Conference opening** | ** ** |
| |  |   |
| **09:50** | **Styling React/ReactNative Applications â€“                           Max Stoiber                          KeystoneJS                        ** | **Coding Mobile with the Pros â€“                           Gant Laborde                          Infinite Red                        ** |
| |                               React popularized a new way of building user interfaces â€“ components. By splitting our app into small, digestible parts the system as a whole becomes a lot easier to understand.                              CSS was made in an era where documents were the height of the web. It doesn't fit easily into component-based systems, making styling one of the pain points of building React applications.                              What if we took the best of JavaScript and the best of CSS, and combined them together to create the ultimate solution? Glen Maddern (CSS Modules co-creator) and I sat down and starting thinking about styling in this new paradigm. Let's talk about what we thought about and why we arrived where we did â€“ ðŸ’… styled-components.                             |                               React Native mobile just got easier. Learn how to tap into rapid development by using what the pros are ready to give you!                             |
| **10:20** | **How Pinterest switched their template rendering engine to React â€“                           Jessica Chan                          Pinterest                        ** | **Web like release agility for React Native apps â€“                           Parashuram N                          Microsoft                        ** |
| | A deep dive into how Pinterest migrated their web infrastructure to serve React pages, which required moving a huge amount of code without breaking the site. Details on the legacy stack (Django web server and Nunjucks/Jinja template rendering) moving to Node and migrating our templates to React. |                               Code Push for React Native brings web like release agility to mobile apps by enabling developers to update apps instantly. This talk will cover the next iteration of Code Push and how it fits into a complete suite of DevOps services built for called Mobile Center, built for React Native.                             |
| **11:00** | **Coffee Break** | **Coffee Break** |
| |  |  |
| **11:30** | **A real-world Relay application in production â€“                           Stefano Masini                          Balsamiq                        ** | **Asynchronous & Offline magic tricks on React Native â€“                           Woody Rousseau                          Theodo UK                        ** |
| | This is the tale of how we, at Balsamiq, rolled out our new web-app, from greenfield to production. A real-world application with real-time collaboration, built using Relay, Redux, React-rendered html emails, node.js, Redis, etc., running on AWS using Convox. Even at small/medium scale, if you're serious about building a good product you will eventually have to build a complex stack. I will share the details of the services we use, how we make them fit together and what we learned in the process. |                               Javascript has provided us with amazing ways to handle asynchronous logic to provide the best user experience possible.                                                            React Native is today the best tool to build mobile apps fast, but require extra care when managing asynchronous & offline logic: most people are often going to use your app with weak to no network.                                                            Get ready to get your app to the next level when you learn how to handle these edge cases                             |
| **12:00** | **TBD â€“                           Lightning Talks                        ** | **TBD â€“                           Lightning Talks                        ** |
| |  |  |
| **12:30** | **Lunch & Networking** | **Lunch & Networking** |
| |  |  |
| **14:00** | **Fun With Fiber Custom Renderers â€“                           Ken Wheeler                          Formidable                        ** | **Universal React â€“                           Mike Grabowski                          Callstack.io                        ** |
| | In this talk I will be detailing how to create custom renderers using the new Fiber architecture, and showing examples exploring some fun things you can do with them. | React Native opens up the world of mobile development for many of us, front-end engineers. It not only allows us to use technologies we know already, like React, to provide first-class native experience to our users, but also to support many platforms, like Android and iOS at once, from within the same codebase. This talk will explore various patterns that turned to be useful over the course of few projects I did. It will also demonstrate techniques that can be used to write truly universal apps, ie. ones that share core across web, native and more. |
| **14:30** | **Pushing bugs to prod responsibly with React and Redux â€“                           Alex Castillo                          Netflix                        ** | **Performance Limitations of React Native and How to Overcome Them â€“                           Tal Kol                          Wix                        ** |
| | The question is not how to avoid bugs when building software. There will always be bugs. The question is how quickly can you recover from them. Let's go through some ways you can give your app the ability to notify you of these bugs before your users do using React and Redux. Start pushing bugs to prod responsibly. | React Native holds great promise in terms of excellent developer experience with JavaScript and code reuse between platforms. The big question isâ€Š - do these benefits come at the price of performance? How well can React Native hold its own against purely native implementations? |
| **15:00** | **Coffee Break** | **Coffee Break** |
| |  |  |
| **15:30** | **Test like it's 2017 â€“                           Michele Bertoli                          Facebook                        ** | **React Native Touch & Gesture â€“                           Krzysztof Magiera                          Software Mansion                        ** |
| | Testing UIs has always been a hard job. In the components era, there are new tools and solutions available that transform completely the way we approach testing. From snapshots, through end-to-end frameworks, to style guide testing. In this talk, we'll see some modern (and creative) testing solutions. |                               React Native allows for building great native apps by utilising native mobile components. Apparently handling touch and gestures is quite tricky as it often needs to interact with the application code which runs asynchronously in the javascript VM. This talk is going to be about how the gesture system has been designed and implemented in React Native and how to use it to stay out of trouble.                             |
| **16:00** | **Introduction to ReactVR â€“                           Nik Graf                          Serverless                        ** | **Navigating React Native Navigation â€“                           Kurtis Kemple                          Major League Soccer                        ** |
| | Many web developers havenâ€™t explored WebVR yet. Building 3D Worlds was an intimidating endeavour. Especially with ReactVR there is no reason for that anymore. The talk kicks off with the basics of WebVR, shows how to build and navigate rooms using panos in ReactVR. Next it shows how to create a couple 3D meshes and how put together a small world using them. |                               When you start out on React Native project, there is a certain sense of awe as the package manager delivers the first bundle to the simulator. You quickly add some hello world text and maybe even a Pokemon image. Things are really starting to look upâ€¦                                                            And then you need to add another view and you realize that you need to navigate somewhere. So you check out the React Native Docs and are quickly greeted by IOSTabBar, Navigation, and NavigationExperimental modules. With so many different options in the core codebase you realize that itâ€™s still a bit of an unsolved problem. Now youâ€™re looking at 3rd party integrationsâ€¦ and you start to wonder, just how should you implement navigation?                                                            This talk will outline the different approaches to navigation available in React Native and in the RN eco-system, and the proâ€™s and conâ€™s of each solution.                             |
| **16:30** | **Coffee Break** | **Coffee Break** |
| |  |  |
| **17:00** | **Complexity: Divide and Conquer! â€“                           Michel Weststrate                          Mendix                        ** | **Testing & React Native: Lessons from the Battlefield â€“                           Aaron Greenwald                          Wix                        ** |
| | "Reactive programming" still sounds scary to many developers. As if it is an elevated way of thinking, only accessible to the chosen few. Nothing is less true! It is the most natural way to look at programming problems. You just might not realize it yet! In this talk, Michel will demonstrate that many complex UI problems, such as form validation and routing, can all be seen as '*actions* that change *facts* which leads to *reactions*'. And as soon as we start distinguishing those concepts in our applications; our code will become more declarative, more concise and less imperative. |                               Wix has been about cutting edge web development for a while, and we're all about TDD. When we started mobile with RN, we struggled to replicate our test-heavy workflow that we'd grown to love. We lacked tooling, best practices, and general know-how.                                                            In this talk, you'll hear about what works and what doesn't. You'll find out what methods we tried and rejected so you won't have to make the same mistakes, and you'll get pointers toward approaches that we've found work so you can get started on the right foot.                             |
| **17:30** | **Flow Typing a React Codebase â€“                           Forbes Lindesay                          Facebook                        ** | **Demystifying GraphQL Clients â€“                           Chris Biscardi                          Dropbox                        ** |
| | Adding type checking to your code can be a frustrating experience at first.  In this talk, Forbes will help you through that initial stage by identifying some of the problems you're likely to experience and giving you the tools to work through them.  We'll cover adding types to code that initially looks too dynamic to type, adding runtime type checking (and whether that's a good idea) and finally, how you publish your type checked modules to npm. | Find out how choosing a GraphQL client can impact development. From Relay to template strings, we will explore topics such as modularity, schema checking, and static analysis. |
| **18:10** | **Closing & Surprise Talk â€“                           Vincent Riemer & Bruce Lane                        ** | ** ** |
| |  |   |
| **18:40** | **                          Afterparty                        ** | ** ** |
| |  |   |